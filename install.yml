---
- hosts: localhost
  vars_prompt:
    - name: disk
      prompt: Which disk do you want to install arch on? (nvme0n1)
      default: nvme0n1
      private: no
    - name: wipe_disk
      prompt: Do you want to wipe the disk? (yes/NO)
      default: no
      private: no
    - name: encrypt_root
      default: yes
      prompt: Do you want to encrypt the root partition? (YES/no)
      private: no
    - name: fstype
      default: ext4
      prompt: What filesystem do you want your root paritition do be formated with? (ext4)
      private: no

  pre_tasks:
  - name: Enable and start NTP
    systemd:
      name: systemd-timesyncd
      enabled: yes
      state: started

  roles:
    # BE CAREFUL, THIS ROLE IS NOT IDEMPOTENT
    - role: wipe
      tags: wipe
      when: wipe_disk|bool and is_nvme

    - role: partition
      tags: partition

    - role: encrypt
      tags: encrypt
      when: encrypt_root|bool

    - role: format
      tags: format

    - role: arch-install
      tags: arch-install

  # Chroot to the new system to install my programs
  post_tasks:
  - import_role:
      name: mount

  # Mount the directories arch-chroot would mount
  - name: Mount /proc, /sys, /dev and /run to /mnt
    mount:
      src: /{{ item.dir }}
      path: /mnt/{{ item.dir }}
      fstype: '{{ item.fstype }}'
      opts: '{{ item.option|default(omit) }}'
      state: mounted
    loop:
      - { dir: proc, fstype: proc }
      - { dir: sys, fstype: none, option: bind }
      - { dir: dev, fstype: none, option: bind }
      - { dir: run, fstype: none, option: bind }

  - name: Copy 'resolv.conf'
    copy:
      src: /etc/resolv.conf
      dest: /mnt/etc/resolv.conf

  - name: Add mount point '/mnt' to inventory
    tags: install
    add_host:
      name: '/mnt'
      ansible_connection: chroot
    changed_when: False

- name: Install setup
  tags: install
  import_playbook: site.yml
  vars:
    hostlist: '/mnt'

- hosts: localhost
  tasks:
  tags: install
  - name: Unmount /mnt
    mount:
      path: /mnt/{{ item }}
      state: unmounted
    loop:
      - proc
      - sys
      - dev
      - run

  - import_role:
      name: unmount
