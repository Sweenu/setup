---
- block:
    - include_role:
        name: mount

    - name: Pacstrap
      command: 'pacstrap /mnt base base-devel python python-pip grub efibootmgr networkmanager
               {{ shell }} {{ "btrfs-progs" if fstype == "btrfs" else "" }}'
      args:
        creates: /mnt/dev

    - name: Generate fstab
      shell: genfstab -U /mnt > /mnt/etc/fstab
      args:
        creates: /mnt/etc/fstab

    - name: Install Jinja2 with Pacman
      command: arch-chroot /mnt pacman -S python-jinja
      args: 
        creates: /mnt/usr/lib/python3.6/site-packages/jinja2

    - name: Install PyYAML with Pacman
      command: arch-chroot /mnt pacman -S python-yaml
      args: 
        creates: /mnt/usr/lib/python3.6/site-packages/PyYAML

    - name: Install Ansible dependencies with Pacman
      command: arch-chroot /mnt pacman -S python-{{ item }}
      args: 
        creates: /mnt/usr/lib/python3.6/site-packages/{{ item }}
      loop:
        - paramiko
        - cryptography
        - setuptools

    - name: Install Ansible on mounted disk
      command: arch-chroot /mnt pip install ansible
      args: 
        creates: /mnt/usr/bin/ansible

    - block:
        - name: Copy this repo to the mounted disk
          synchronize:
            src: '{{ playbook_dir }}'
            dest: /mnt/root/

        - name: Chroot and do necessary install
          expect:
            command: 'arch-chroot /mnt ansible-playbook --vault-id @prompt -e "disk={{ disk }}" /root/setup/site.yml'
            responses:
              '.*password.*': '{{ vault_passwd }}'
            timeout: 1000

      always:
        - name: Remove this repo on mounted disk 
          file:
            path: /mnt/root/setup
            state: absent

  always:
    - include_role:
        name: unmount
